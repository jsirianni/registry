name: release
on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io

jobs:
  goreleaser:
    runs-on: ubuntu-20.04
    permissions: write-all

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Set up Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version: "1.18"

      - name: Cache Go Modules
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Log in to the Container registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-20.04
    needs: goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Install kubectl
        run: gcloud components install kubectl

      - name: Install Gomplate
        run: |
          wget https://github.com/hairyhenderson/gomplate/releases/download/v3.9.0/gomplate_linux-amd64-slim
          chmod +x gomplate_linux-amd64-slim && mv gomplate_linux-amd64-slim gomplate

      - name: Cluster Login
        run: |
          gcloud container clusters get-credentials $CLUSTER_NAME \
            --zone $CLUSTER_ZONE \
            --project $GCP_PROJECT
        env:
          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
          GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
          CLUSTER_ZONE: ${{ secrets.CLUSTER_ZONE }}

      - name: Deploy
        run: |
          REF="${GITHUB_REF##*/}"
          TAG="${REF:1}"
          echo "Setting tag as: ${TAG}"
          export IMAGE_TAG="${IMAGE}:${TAG}"
          ./gomplate --file deploy/k8s/deployment.gotmpl | kubectl apply -f -
        env:
          NAMESPACE: ${{ secrets.NAMESPACE }}
          IMAGE: ghcr.io/jsirianni/registry
          INGRESS_CLUSTER_ISSUER: ${{ secrets.INGRESS_CLUSTER_ISSUER }}
          INGRESS_HOSTNAME: ${{ secrets.INGRESS_HOSTNAME }}
          REGISTRY_CONFIG_SECRET_KEY: ${{ secrets.REGISTRY_CONFIG_SECRET_KEY }}
          REGISTRY_CONFIG_STORAGE_TYPE: ${{ secrets.REGISTRY_CONFIG_STORAGE_TYPE }}
