#!/usr/bin/env bash

set -e

cd "$(dirname "$0")"

rm -rf tls
mkdir tls

touch tls/index.txt
echo 00 > tls/serial

cat <<- EOF > tls/openssl.conf
[ ca ]
default_ca      = my_ca
[ my_ca ]
database        = tls/index.txt
serial          = tls/serial
new_certs_dir   = tls/
x509_extensions = my_cert
name_opt         = ca_default
cert_opt         = ca_default
default_md       = default
policy           = policy_match
# 'copy_extensions' will copy over SAN ("X509v3 Subject Alternative Name") from CSR
copy_extensions = copy

[ my_cert ]
basicConstraints        = CA:FALSE
nsComment               = "generated by github.com/jsirianni/test"
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer

[ policy_match ]
# ensure CSR fields match that of delivered Cert
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

EOF

pki() {
    # certificate authority
    openssl genrsa -out tls/test-ca.key 4096
    openssl req -new -x509 -sha256 \
        -key tls/test-ca.key \
        -out tls/test-ca.crt \
        -days 10950 \
        -subj "/C=US/ST=Michigan/L=GrandRapids/O=jsirianni/OU=test/CN=test-ca"

    # certificate
    openssl genrsa -out tls/test.key 4096
    openssl req -new -key tls/test.key -out tls/test.csr \
        -subj "/C=US/ST=Michigan/L=GrandRapids/O=jsirianni/OU=test/CN=localhost" \
        -addext "subjectAltName=DNS:localhost,DNS:test.test-dev.svc.cluster.local"
    openssl ca \
        -create_serial \
        -cert tls/test-ca.crt \
        -keyfile tls/test-ca.key \
        -days 9125 \
        -in tls/test.csr \
        -batch \
        -config tls/openssl.conf \
        -out tls/test.crt

    # append ca.crt to server certificate
    cat tls/test-ca.crt >> tls/test.crt    
}

permissions() {
    chmod 0644 tls/*
}

pki
permissions
